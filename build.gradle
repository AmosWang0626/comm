plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "com.palantir.docker" version "0.22.2"
    id "com.google.protobuf" version "0.8.11"
}

group 'com.amos'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // lombok config begin
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    compileOnly 'org.projectlombok:lombok:1.18.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.6'
    // lombok config end
    testCompileOnly 'org.projectlombok:lombok:1.18.6'
    compile group: 'io.netty', name: 'netty-all', version: '4.1.36.Final'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.56'
    compile group: 'com.caucho', name: 'hessian', version: '4.0.60'
    compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.1'
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.11.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile group: 'redis.clients', name: 'jedis', version: '3.0.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

docker {
    dependsOn build as Task
    name "${project.group}/${project.name}:${project.version}"
    files bootJar.archiveFile
    buildArgs(['JAR_FILE': "${bootJar.archiveBaseName}"])
}

sourceSets {
    main {
        proto {
            // default 'src/main/proto'
            srcDir 'src/main/protocol'
        }
        java {

        }
    }
    test {
        proto {
            // default 'src/test/proto'
            srcDir 'src/test/protocol'
        }
    }
}

protobuf {
    generatedFilesBaseDir = "$projectDir/out/generated"

    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}