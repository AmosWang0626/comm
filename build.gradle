buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        // step.5
        // mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        // step.1
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// step.2
apply plugin: 'com.palantir.docker'

// step.3
bootJar {
    baseName = 'im'
    version = '1.0.0'
}

group = 'amos'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-web')
    // implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    // runtimeOnly('mysql:mysql-connector-java')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compile group: 'io.netty', name: 'netty-all', version: '4.1.36.Final'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.56'
    compile group: 'com.caucho', name: 'hessian', version: '4.0.60'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
    compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.1'
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.11.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile group: 'redis.clients', name: 'jedis', version: '3.0.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile("org.springframework.boot:spring-boot-starter-websocket")
}

// step.4
docker {
    dependsOn build as Task
    // groupName "${project.group}/${bootJar.baseName}:${bootJar.version}"
    name "${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

// gradlew build docker